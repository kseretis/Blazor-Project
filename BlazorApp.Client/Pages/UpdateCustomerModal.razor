@using BlazorApp.Client.Services
@using BlazorApp.Shared.Dtos

@inject CustomerApiService CustomerApiService;

<div class="modal" style="display: @(IsVisible ? "block" : "none");">
    <div class="modal-dialog">
        <div class="modal-content">
            <EditForm Model="CustomerDto" FormName="newCustomerForm" OnValidSubmit="Save">
                <DataAnnotationsValidator/>
                
                <div class="modal-header">
                    <h5 class="modal-title">@Title</h5>
                    <button type="button" class="btn-close" @onclick="Hide"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="companyName" class="form-label">Company Name</label>
                        <InputText id="companyName" class="form-control" @bind-Value="CustomerDto.CompanyName"/>
                        <ValidationMessage For="@(() => CustomerDto.CompanyName)"/>
                    </div>

                    <div class="mb-3">
                        <label for="contactName" class="form-label">Contact Name</label>
                        <InputText id="contactName" class="form-control" @bind-Value="CustomerDto.ContactName"/>
                        <ValidationMessage For="@(() => CustomerDto.ContactName)"/>
                    </div>

                    <div class="mb-3">
                        <label for="address" class="form-label">Address</label>
                        <InputText id="address" class="form-control" @bind-Value="CustomerDto.Address"/>
                        <ValidationMessage For="@(() => CustomerDto.Address)"/>
                    </div>

                    <div class="mb-3">
                        <label for="city" class="form-label">City</label>
                        <InputText id="city" class="form-control" @bind-Value="CustomerDto.City"/>
                    </div>

                    <div class="mb-3">
                        <label for="region" class="form-label">Region</label>
                        <InputText id="region" class="form-control" @bind-Value="CustomerDto.Region"/>
                    </div>

                    <div class="mb-3">
                        <label for="postalCode" class="form-label">Postal Code</label>
                        <InputText id="postalCode" class="form-control" @bind-Value="CustomerDto.PostalCode"/>
                        <ValidationMessage For="@(() => CustomerDto.PostalCode)"/>
                    </div>

                    <div class="mb-3">
                        <label for="country" class="form-label">Country</label>
                        <InputText id="country" class="form-control" @bind-Value="CustomerDto.Country"/>
                    </div>

                    <div class="mb-3">
                        <label for="phone" class="form-label">Phone</label>
                        <InputText id="phone" class="form-control" @bind-Value="CustomerDto.Phone"/>
                        <ValidationMessage For="@(() => CustomerDto.Phone)"/>
                    </div>
                    
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <button class="btn btn-secondary" @onclick="Hide">Close</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter] public string Title { get; set; } = "Update Customer";
    [Parameter] public CustomerDto? CustomerDto { get; set; } = new();
    [Parameter] public EventCallback<string> OnSave { get; set; }

    private bool IsVisible { get; set; }
    
    public void Show()
    {
        IsVisible = true;
        StateHasChanged();
    }

    public void Hide()
    {
        IsVisible = false;
        StateHasChanged();
    }

    private async Task Save()
    {
        await CustomerApiService.UpdateCustomerAsync(CustomerDto!);
        await OnSave.InvokeAsync();
        Hide();
    }
}